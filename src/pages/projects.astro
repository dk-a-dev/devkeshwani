---
import BaseLayout from "../layout/BaseLayout.astro";
import ProjectCard from "../components/ProjectCard.astro";
import ProjectHeader from "../components/ProjectHeader.astro";
export const projects = [
  {
    title: "Liwid",
    description: [
      "Implemented the Liwid library for live widgets/notifications on the Lock Screen, enhancing order tracking, food tracking, and stock notifications with real-time updates.",
      "Made a Prototype for the Library as a app to demonstrate the features of the library.",
    ],
    techStack: ["Kotlin", "RestAPI", "Android Library"],
    link: "https://github.com/dk-a-dev/Liwid",
    image: "/projects/liwid.svg",
  },
  {
    title: "Rivera'24 App",
    description: [
      "Developed the official VIT Riviera'24 App for the annual international sports and cultural carnival, attracting 30,000+ students from 650+ colleges and featuring 100+ events.",
      "Implemented an app that contributed to increased event visibility and engagement, despite the app having 100+ downloads",
    ],
    techStack: ["Flutter", "Dart", "Firebase", "Git"],
    link: "https://play.google.com/store/apps/details?id=in.ac.vit.riviera24",
    image: "/projects/riviera.png",
  },
  {
    title: "SoundCrowd",
    description: [
      "A platform to manage shared spotify playlists during events",
      "Admin based event creation and song addition management",
    ],
    techStack: ["Svelte", "TailwindCSS"],
    link: "https://soundcrowd.dscvit.com/",
    image: "/projects/collabify.svg",
  },
  {
    title:"Artium",
    description:[
      "Artium is a platform to Discover historic and contemporary art styles.",
      "Users can create a profile, upload their work.",
      "Utilizes Neural Style Transfer (NST), powered by a pre-trained VGG19 network to generate art in the style of famous artists.",
    ],
    techStack:["NextJs","Node.js","Express.js","MongoDB","TailwindCSS","Flutter","Provider"],
    link:"https://artium.dscvit.com/",
    image:"/projects/artium.svg",
  },
  {
    title: "Zitch",
    description: [
      " Innovated a solution for the Google Developers SDG Hackathon, geared towards helping NGOs and the UN's 17 Sustainable Development Goals",
      "Worked in a 3 person team using gRPC, Flutter and Classification Models to generate a heatmap of stray dogs in an Android App",
    ],
    techStack: ["Flutter", "Dart", "Firebase", "gRPC"],
    link: "https://github.com/sidhant-sriv/zitch",
    image: "/projects/zitch.svg",
  },
  {
    title: "Github Orgs Yearly Wrap Generator",
    description:[
      "A GitHub Org Data Analyzer is a tool designed to analyze GitHub Orgs activity data.",
      " It provides insights into various metrics such as total active days, longest gaps, busiest days, longest streaks, month-wise activity, time-wise activity, developer activity, and repository activity based on logs of GitHub activity.",
    ],
    techStack: ["Python", "Numpy", "Pandas", "Streamlit","plotly","Discrub"],
    link: "https://github.com/dk-a-dev/github-org-wrapped-gen",
    image: "/projects/gorg.svg",

  },
  {
    title: "Breakey",
    description: [
      "Breakey is a simple yet effective typing speed test website(inspired by monkey-type)",
      "Users can gauge their typing speed by typing a given set of words within a 30-second timeframe.",
      "It implements sleek design of monkey-type with customizable themes",
    ],
    techStack: [
      "HTML",
      "CSS",
      "JavaScript",
      "Node.js",
      "Express.js",
      "MongoDB",
    ],
    link: "https://breakey.vercel.app/",
    image: "/projects/breakey.svg",
  },
  {
    title: "Ledgerly App",
    description: [
      "An advanced AI-powered Book-keeping app inspired by Khatabook",
      "Working in a 6-person team using Django, Flutter and Classification Models to record voice-enabled transactions in an Flutter App.",
    ],
    techStack: ["Flutter", "Dart", "Firebase", "Riverpod"],
    link: "https://github.com/dk-a-dev/book-keeping-app",
    image: "/projects/bookeeper.svg",
  },
];
---

<BaseLayout title="dk-a-dev/projects">
  <ProjectHeader />
  <div class="projects-container">
    <div class="card-grid">
      {
        projects.map((project) => (
          <ProjectCard
            title={project.title}
            description={project.description}
            techStack={project.techStack}
            link={project.link}
            image={project.image}
          />
        ))
      }
    </div>
  </div>

  <style>
    .projects-container {
      padding: 2rem;
    }
    .card-grid {
      display: grid;
      justify-content: center;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    @media (min-width: 768px) {
      .card-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    @media (min-width: 1024px) {
      .card-grid {
        grid-template-columns: repeat(1, 1fr);
      }
    }

    .projects-container h1 {
      text-align: center;
      margin-bottom: 2rem;
    }
  </style>
</BaseLayout>
